@model ModuleModel
@@model @Model.View

<div class="col">
    <div class="widget-box readonly">
        <div class="widget-header">
            <span class="icon fa fa-th-list"></span>
            <h5>@@Resource.ForHeader("@(Model.Model)")</h5>
            <div class="widget-header-buttons">
                <authorize action="@@nameof(@(Model.Controller).Details)">
                    <a asp-action="@@nameof(@(Model.Controller).Details)" asp-route-id="@@Model.Id" class="btn">
                        <span class="fa fa-info"></span><span class="text">@@Resource.ForAction(nameof(@(Model.Controller).Details))</span>
                    </a>
                </authorize>
                <authorize action="@@nameof(@(Model.Controller).Edit)">
                    <a asp-action="@@nameof(@(Model.Controller).Edit)" asp-route-id="@@Model.Id" class="btn">
                        <span class="fa fa-pencil-alt"></span><span class="text">@@Resource.ForAction(nameof(@(Model.Controller).Edit))</span>
                    </a>
                </authorize>
            </div>
        </div>
        <div class="widget-content">
            @foreach (PropertyInfo property in Model.ViewProperties)
            {
            <div class="form-group row">
                <div class="control-label col-md-4 col-xl-2">
                    <label asp-for="@property.Name"></label>
                </div>
                <div class="control-content col-md-8 col-xl-4">
                    @if (property.PropertyType == typeof(String))
                    {
                    <input asp-for="@property.Name" />
                    }
                    else if (typeof(DateTime?).IsAssignableFrom(property.PropertyType))
                    {
                    <input asp-for="@property.Name" asp-format="{0:d}" class="datepicker" type="text" />
                    }
                    else if (typeof(Boolean?).IsAssignableFrom(property.PropertyType))
                    {
                    <input asp-for="@property.Name" />
                    }
                    else if (property.PropertyType.IsEnum || Nullable.GetUnderlyingType(property.PropertyType)?.IsEnum == true)
                    {
                    <select asp-for="@property.Name" asp-items="Html.GetEnumSelectList<@((Nullable.GetUnderlyingType(property.PropertyType) ?? property.PropertyType).Name)>()"></select>
                    }
                    else if (Model.Relations[property] is String relation)
                    {
                    <div mvc-lookup-for="@property.Name" handler="@@nameof(Lookup.@relation)"></div>
                    }
                    else
                    {
                    <input asp-for="@property.Name" type="text" />
                    }
                </div>
            </div>
            }
            <form asp-antiforgery="true">
                <div class="form-group row">
                    <div class="form-actions col-xl-6">
                        <button class="btn btn-primary">@@Resource.ForAction("Submit")</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
